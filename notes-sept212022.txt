Task
Sum all the numbers of a given array(cq.list), except the highest and the lowest element(by value, not by index!).

The highest or lowest element respectively is a single element at each edge, even if there are more than one with the same value.

Mind input validation

Example: {6,2,1,8,10} => 16
{1,1,11,2,3} => 6

Input validation: If an empty value(null,None,Nothing,etc.) is given instead of an array, or, the given array is an empty list or a list with only 1 element, return 0. 
============
empty value: if (arr[] = null || [] || arr.length === 1){return 0}
======
Find highest:
ideas on how: establish a baseline...then check against it. Shift if so.
let bignum = 0
if(arr[i] < bignum){bignum=arr[i]}

--------
my final attempted code:
function sumArray(array) {
if (array = null || [] || array.length === 1){return 0}else{
  let bignum = 0;
  let smallnum = 0;
  for(i=0;i<array.length;i++){if(array[i] > bignum){bignum=array[i]}else{smallnum=array[i]}}
}
}
-------------
Where I went wrong?
*I assigned arr and gave it a comparison in same line---- I should've done if(array == null || array.length < 2){return 0}
this would've compared to null AND array length..and correctly.

*array = array.sort was used to sort the array numbers. array.sort() sorts in ascending order. This would have been helpful for then removing the highest and lowest.

One method I came up with, not seen, is to shift and pop the values.
